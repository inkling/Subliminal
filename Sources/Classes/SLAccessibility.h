//
//  SLAccessibility.h
//  Subliminal
//
//  Created by William Green on 11/1/12.
//  Copyright (c) 2012 Inkling. All rights reserved.
//

#import <UIKit/UIKit.h>

@class SLElement;


@interface NSObject (SLAccessibility)

/** A string Subliminal will use to reference this element in UIAutomation.
 
 The default implementation returns the object's accessibility label. Subclasses of UIView and UIAccessibilityElement return the object's accessibility identifier or accessibility label. UIButton's return the accessibility identifier or label, or the button's title if the identifier and label are `nil`.
 UIScrollViews and UIImageViews that would not otherwise have a name generate an accessibility identifier to use as the accessibility name.
 */
@property (nonatomic, readonly) NSString *slAccessibilityName;

/** Returns an array of objects that are child accessibility elements of this object.
 
 This method is mostly a wrapper around the UIAccessibilityContainer protocol but also includes subviews if the object is a UIView. It attempts to represent the accessibilty hierarchy used by the system.
 
 @return An array of objects that are child accessibility elements of this object.
 */
- (NSArray *)slChildAccessibilityElements;

/** Returns a chain of objects that can used by UIAutomation to access the element.
 
 The array starts at index 0 with this object and ends with the target element.
 
 @param element The element whose label to find.
 @return A chain of objects that can used by UIAutomation to access the element or `nil` if the element is not found within this object's accessibility hierarchy.
 */
- (NSArray *)slAccessibilityChainToElement:(SLElement *)element;

/// ----------------------------------------
/// @name Debug methods
/// ----------------------------------------
- (NSString *)slAccessibilityDescription;
- (NSString *)slRecursiveAccessibilityDescription;

@end


@interface UIAccessibilityElement (SLAccessibility)
@end


@interface UIView (SLAccessibility)
@end


@interface UIButton (SLAccessibility)
@end


/**
 UIScrollViews are included in the accessibility hierarchy regardless of whether or not they have an accessibility name. Because of this we override
 slAccessibilityName in UIScrollViews, and generate an identifier if no name exists. This ensures that scrollviews will be included in the uiaPrefix
 generated by Subliminal as well as the accessibility hierarchy.
 */
@interface UIScrollView (SLAccessibility)
@end


/**
 UIImageViews are included in the accessibility hierarchy regardless of whether or not they have an accessibility name. Because of this we override
 slAccessibilityName in UIImageViews, and generate an identifier if no name exists. This ensures that imageviews will be included in the uiaPrefix
 generated by Subliminal as well as the accessibility hierarchy.
 */
@interface UIImageView (SLAccessibility)
@end
